{"ast":null,"code":"var _jsxFileName = \"/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/Display.js\";\nimport React from \"react\";\nimport IndexBar from \"./IndexBar\";\nimport CalcButton from \"./CalcButton\";\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resetState = () => {\n      this.setState({\n        index: \"\",\n        result: \"\",\n        label: \"Sequence Result\"\n      });\n    };\n\n    this.loopWay = () => {\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n\n      if (this.state.index !== \"\") {\n        if (this.state.index <= 1 && this.state.index >= 0) fiboNew = this.state.index;\n\n        for (let sequence = 2; sequence <= this.state.index; sequence++) {\n          fiboNew = fiboFirst + fiboPrev;\n          fiboFirst = fiboPrev;\n          fiboPrev = fiboNew;\n        }\n\n        this.setState({\n          result: fiboNew,\n          label: \"The loop way result is : \"\n        });\n      } else {\n        this.setState({\n          label: \"Index field is empty!\"\n        }); //beep\n      }\n    };\n\n    this.recursionWay = num => {\n      if (num <= 1 && num >= 0) return num;\n      return this.recursionWay(num - 1) + this.recursionWay(num - 2);\n    };\n\n    this.setRecursWay = () => {\n      console.log(\"setRec... Evoked\");\n      const recursionResult = this.recursionWay(parseInt(this.state.index));\n      this.setState({\n        label: \"The recursion way is : \",\n        result: recursionResult\n      });\n    };\n\n    this.reduceWay = () => {\n      if (this.state.index !== \"\") {\n        const startValue = 1 + parseInt(this.state.index);\n        const arr = Array.from(Array(startValue), (_, k) => k);\n        const initialElement = [];\n\n        const reducer = (acc, currentValue) => {\n          return currentValue <= 1 ? [...acc, currentValue] : [...acc, acc[acc.length - 1] + acc[acc.length - 2]];\n        };\n\n        const newArr = arr.reduce(reducer, initialElement);\n        this.setState({\n          result: newArr[parseInt(this.state.index)],\n          label: \"The reduce way result is : \"\n        });\n      } else {\n        this.setState({\n          label: \"Index field is empty!\"\n        }); //beep\n      }\n    };\n\n    this.state = {\n      index: \"\",\n      label: \"Sequence Result\",\n      result: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      index: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(IndexBar, {\n      input: this.state.index,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.label), React.createElement(\"span\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.result), React.createElement(\"div\", {\n      className: \"buttoncard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttonset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(CalcButton, {\n      name: \"Loop Way\",\n      variant: \"success\",\n      clicked: this.loopWay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      name: \"Recursion Way\",\n      variant: \"success\",\n      clicked: this.setRecursWay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      name: \"Reduce Way\",\n      variant: \"success\",\n      clicked: this.reduceWay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      name: \"Reset\",\n      variant: \"warning\",\n      clicked: this.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/Display.js"],"names":["React","IndexBar","CalcButton","Display","Component","constructor","props","resetState","setState","index","result","label","loopWay","fiboNew","fiboPrev","fiboFirst","state","sequence","recursionWay","num","setRecursWay","console","log","recursionResult","parseInt","reduceWay","startValue","arr","Array","from","_","k","initialElement","reducer","acc","currentValue","length","newArr","reduce","handleChange","bind","event","target","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IndexBar from \"./IndexBar\";\nimport CalcButton from \"./CalcButton\";\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: \"\",\n      label: \"Sequence Result\",\n      result: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ index: event.target.value });\n  }\n\n  resetState = () => {\n    this.setState({\n      index: \"\",\n      result: \"\",\n      label: \"Sequence Result\"\n    });\n  };\n\n  loopWay = () => {\n    var fiboNew;\n    var fiboPrev = 1;\n    var fiboFirst = 0;\n    if (this.state.index !== \"\") {\n      if (this.state.index <= 1 && this.state.index >= 0)\n        fiboNew = this.state.index;\n      for (let sequence = 2; sequence <= this.state.index; sequence++) {\n        fiboNew = fiboFirst + fiboPrev;\n        fiboFirst = fiboPrev;\n        fiboPrev = fiboNew;\n      }\n      this.setState({\n        result: fiboNew,\n        label: \"The loop way result is : \"\n      });\n    } else {\n      this.setState({ label: \"Index field is empty!\" });\n      //beep\n    }\n  };\n\n  recursionWay = num => {\n    if (num <= 1 && num >= 0) return num;\n\n    return this.recursionWay(num - 1) + this.recursionWay(num - 2);\n  };\n\n  setRecursWay = () => {\n    console.log(\"setRec... Evoked\");\n    const recursionResult = this.recursionWay(parseInt(this.state.index));\n    this.setState({\n      label: \"The recursion way is : \",\n      result: recursionResult\n    });\n  };\n\n  reduceWay = () => {\n    if (this.state.index !== \"\") {\n      const startValue = 1 + parseInt(this.state.index);\n      const arr = Array.from(Array(startValue), (_, k) => k);\n      const initialElement = [];\n      const reducer = (acc, currentValue) => {\n        return currentValue <= 1\n          ? [...acc, currentValue]\n          : [...acc, acc[acc.length - 1] + acc[acc.length - 2]];\n      };\n      const newArr = arr.reduce(reducer, initialElement);\n      this.setState({\n        result: newArr[parseInt(this.state.index)],\n        label: \"The reduce way result is : \"\n      });\n    } else {\n      this.setState({ label: \"Index field is empty!\" });\n      //beep\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"index\">\n        <IndexBar input={this.state.index} handleChange={this.handleChange} />\n        <span className=\"result\">{this.state.label}</span>\n        <span className=\"result\">{this.state.result}</span>\n        <div className=\"buttoncard\">\n          <div className=\"buttonset\">\n            <CalcButton\n              name={\"Loop Way\"}\n              variant={\"success\"}\n              clicked={this.loopWay}\n            />\n            <CalcButton\n              name={\"Recursion Way\"}\n              variant={\"success\"}\n              clicked={this.setRecursWay}\n            />\n            <CalcButton\n              name={\"Reduce Way\"}\n              variant={\"success\"}\n              clicked={this.reduceWay}\n            />\n            <CalcButton\n              name={\"Reset\"}\n              variant={\"warning\"}\n              clicked={this.resetState}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Display;\n"]},"metadata":{},"sourceType":"module"}