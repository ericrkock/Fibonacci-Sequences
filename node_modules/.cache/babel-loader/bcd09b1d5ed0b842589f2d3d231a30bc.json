{"ast":null,"code":"var _jsxFileName = \"/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/Display.js\";\nimport React from 'react';\nimport IndexBar from './IndexBar';\nimport CalcButtons from './CalcButtons';\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.wayLoop = index => {\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n      if (index <= 1 && index >= 0) return index;\n\n      for (let sequence = 2; sequence <= index; sequence++) {\n        fiboNew = fiboFirst + fiboPrev;\n        fiboFirst = fiboPrev;\n        fiboPrev = fiboNew;\n      }\n\n      let seq = fiboNew;\n      this.setState({\n        result: fiboNew\n      });\n      console.log(\"Loop Way Calculation\", index, seq);\n    };\n\n    this.state = {\n      index: '',\n      toCalc: '',\n      result: 'Sequence Result',\n      stamp: 'Time Stamp'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      index: event.target.value\n    });\n    console.log(\"onChange: \", event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(IndexBar, {\n      input: this.state.index,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.result), React.createElement(\"span\", {\n      className: \"stamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.stamp), React.createElement(CalcButtons, {\n      toCalc: this.state.index,\n      result: this.handleResult,\n      stamp: this.state.stamp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/Display.js"],"names":["React","IndexBar","CalcButtons","Display","Component","constructor","props","wayLoop","index","fiboNew","fiboPrev","fiboFirst","sequence","seq","setState","result","console","log","state","toCalc","stamp","handleChange","bind","event","target","value","render","handleResult"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAenBC,OAfmB,GAeRC,KAAD,IAAW;AAClB,UAAIC,OAAJ;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,SAAS,GAAG,CAAhB;AAEA,UAAIH,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA3B,EAA8B,OAAQA,KAAR;;AAC9B,WAAK,IAAII,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,IAAIJ,KAAnC,EAA0CI,QAAQ,EAAlD,EAAsD;AAClDH,QAAAA,OAAO,GAAGE,SAAS,GAAGD,QAAtB;AACAC,QAAAA,SAAS,GAAGD,QAAZ;AACAA,QAAAA,QAAQ,GAAGD,OAAX;AACH;;AACD,UAAII,GAAG,GAAGJ,OAAV;AACA,WAAKK,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEN;AAAT,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCT,KAApC,EAA2CK,GAA3C;AACF,KA7BkB;;AAEhB,SAAKK,KAAL,GAAa;AACVV,MAAAA,KAAK,EAAE,EADG;AAEVW,MAAAA,MAAM,EAAE,EAFE;AAGVJ,MAAAA,MAAM,EAAE,iBAHE;AAIVK,MAAAA,KAAK,EAAE;AAJG,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACF;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AACjB,SAAKT,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEe,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAd;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,KAAK,CAACC,MAAN,CAAaC,KAAvC;AACF;;AAkBAC,EAAAA,MAAM,GAAI;AACR,WACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,QAAD;AACG,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWV,KADrB;AAEG,MAAA,YAAY,EAAE,KAAKa,YAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAKG;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKH,KAAL,CAAWH,MAArC,CALH,EAMG;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKG,KAAL,CAAWE,KAApC,CANH,EAOG,oBAAC,WAAD;AACG,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWV,KADtB;AAEG,MAAA,MAAM,EAAE,KAAKmB,YAFhB;AAGG,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPH,CADH;AAeF;;AAhDkC;;AAmDtC,eAAejB,OAAf","sourcesContent":["import React from 'react';\nimport IndexBar from './IndexBar';\nimport CalcButtons from './CalcButtons';\n\nclass Display extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = { \n         index: '',\n         toCalc: '',\n         result: 'Sequence Result',\n         stamp: 'Time Stamp'};\n      this.handleChange = this.handleChange.bind(this);\n   }\n\n   handleChange(event) {\n      this.setState({ index: event.target.value});\n      console.log(\"onChange: \", event.target.value);\n   }\n\n   wayLoop = (index) => {\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n  \n      if (index <= 1 && index >= 0) return (index);\n      for (let sequence = 2; sequence <= index; sequence++) {\n          fiboNew = fiboFirst + fiboPrev;\n          fiboFirst = fiboPrev;\n          fiboPrev = fiboNew;\n      }\n      let seq = fiboNew;\n      this.setState({result: fiboNew});\n      console.log(\"Loop Way Calculation\", index, seq);\n   }\n\n    render () {\n      return (\n         <div className=\"index\">\n            <IndexBar \n               input={this.state.index} \n               handleChange={this.handleChange} \n            />\n            <span className=\"result\">{this.state.result}</span>\n            <span className=\"stamp\">{this.state.stamp}</span>\n            <CalcButtons \n               toCalc={this.state.index} \n               result={this.handleResult}\n               stamp={this.state.stamp}\n            />\n         </div>\n      );\n   }\n}\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}