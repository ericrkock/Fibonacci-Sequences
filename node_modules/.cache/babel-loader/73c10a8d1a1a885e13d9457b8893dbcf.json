{"ast":null,"code":"var _jsxFileName = \"/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/Display.js\";\nimport React from \"react\";\nimport IndexBar from \"./IndexBar\";\nimport CalcButton from \"./CalcButton\";\nimport CalcButtons from \"./CalcButtons\";\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resetState = () => {\n      this.setState({\n        result: \"Sequence Calucation\"\n      });\n    };\n\n    this.loopWay = () => {\n      console.log(\"index: \", this.state.index);\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n      if (this.state.index <= 1 && this.state.index >= 0) fiboNew = this.state.index;\n\n      for (let sequence = 2; sequence <= this.state.index; sequence++) {\n        fiboNew = fiboFirst + fiboPrev;\n        fiboFirst = fiboPrev;\n        fiboPrev = fiboNew;\n      } //let seq = fiboNew;\n\n\n      this.setState({\n        result: fiboNew\n      });\n      console.log(\"Loop Way Calculation\", fiboNew);\n    };\n\n    this.recursionWay = () => {\n      console.log(\"Recursion Way Calculation\", this.state.index);\n      if (this.state.index <= 1 && this.state.index >= 0) return this.state.index;\n      let recursion = this.recursionWay(this.state.index - 1) + this.recursionWay(this.state.index - 2);\n      this.setState({\n        result: recursion\n      });\n    };\n\n    this.state = {\n      index: \"\",\n      toCalc: \"\",\n      result: \"Sequence Result\",\n      stamp: \"Time Stamp\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      index: event.target.value\n    });\n    console.log(\"onChange: \", event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(IndexBar, {\n      input: this.state.index,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.result), React.createElement(\"span\", {\n      className: \"stamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.stamp), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CalcButton, {\n      name: \"Loop Way\",\n      variant: \"success\",\n      clicked: this.loopWay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      name: \"Recursion Way\",\n      variant: \"success\",\n      clicked: this.recursionWay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      name: \"Reduce Way\",\n      variant: \"success\",\n      clicked: this.function_ReduceWay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      name: \"Reset\",\n      variant: \"warning\",\n      clicked: this.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/Display.js"],"names":["React","IndexBar","CalcButton","CalcButtons","Display","Component","constructor","props","resetState","setState","result","loopWay","console","log","state","index","fiboNew","fiboPrev","fiboFirst","sequence","recursionWay","recursion","toCalc","stamp","handleChange","bind","event","target","value","render","function_ReduceWay"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IndexBar from \"./IndexBar\";\nimport CalcButton from \"./CalcButton\";\n\nimport CalcButtons from \"./CalcButtons\";\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: \"\",\n      toCalc: \"\",\n      result: \"Sequence Result\",\n      stamp: \"Time Stamp\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ index: event.target.value });\n    console.log(\"onChange: \", event.target.value);\n  }\n\n  resetState = () => {\n    this.setState({ result: \"Sequence Calucation\" });\n  };\n\n  loopWay = () => {\n    console.log(\"index: \", this.state.index);\n    var fiboNew;\n    var fiboPrev = 1;\n    var fiboFirst = 0;\n\n    if (this.state.index <= 1 && this.state.index >= 0)\n      fiboNew = this.state.index;\n    for (let sequence = 2; sequence <= this.state.index; sequence++) {\n      fiboNew = fiboFirst + fiboPrev;\n      fiboFirst = fiboPrev;\n      fiboPrev = fiboNew;\n    }\n    //let seq = fiboNew;\n    this.setState({ result: fiboNew });\n    console.log(\"Loop Way Calculation\", fiboNew);\n  };\n\n  recursionWay = () => {\n    console.log(\"Recursion Way Calculation\", this.state.index);\n    if (this.state.index <= 1 && this.state.index >= 0) return this.state.index;\n    let recursion =\n      this.recursionWay(this.state.index - 1) +\n      this.recursionWay(this.state.index - 2);\n    this.setState({ result: recursion });\n  };\n\n  render() {\n    return (\n      <div className=\"index\">\n        <IndexBar input={this.state.index} handleChange={this.handleChange} />\n        <span className=\"result\">{this.state.result}</span>\n        <span className=\"stamp\">{this.state.stamp}</span>\n        {/* <CalcButtons \n               toCalc={this.state.index} \n               result={this.handleResult}\n               stamp={this.state.stamp}\n            /> */}\n        <div>\n          <CalcButton\n            name={\"Loop Way\"}\n            variant={\"success\"}\n            clicked={this.loopWay}\n          />\n          <CalcButton\n            name={\"Recursion Way\"}\n            variant={\"success\"}\n            clicked={this.recursionWay}\n          />\n          <CalcButton\n            name={\"Reduce Way\"}\n            variant={\"success\"}\n            clicked={this.function_ReduceWay}\n          />\n          <CalcButton\n            name={\"Reset\"}\n            variant={\"warning\"}\n            clicked={this.resetState}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Display;\n"]},"metadata":{},"sourceType":"module"}