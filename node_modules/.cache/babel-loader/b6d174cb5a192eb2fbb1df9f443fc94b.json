{"ast":null,"code":"var _jsxFileName = \"/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/CalcButtons.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass CalcButtons extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.testLoop = () => {\n      //console.log(this.props.toCalc);\n      this.wayLoop(this.props.toCalc);\n    };\n\n    this.wayLoop = index => {\n      console.log(\"Loop Way Calculation\", index);\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n      if (index <= 1 && index >= 0) return index;\n\n      for (let sequence = 2; sequence <= index; sequence++) {\n        fiboNew = fiboFirst + fiboPrev;\n        fiboFirst = fiboPrev;\n        fiboPrev = fiboNew;\n      }\n\n      this.setState({\n        results: fiboNew\n      });\n      console.log(\"Calculation: \", fiboNew); //return this.result;\n    };\n  }\n\n  wayRecursion(index) {\n    console.log(\"Recursion Way Calculation\", index);\n    if (index <= 1 && index >= 0) return index; //this.setState.result(wayRecursion(index-1) + wayRecursion(index-2));\n  }\n\n  wayReduce(index) {\n    console.log(\"Reduce Way Calculation\", index);\n  }\n\n  resetIndex() {\n    console.log(\"Reset Index Input\");\n    this.setState.index('');\n    this.setState.result('Sequence Result');\n    this.setState.stamp('Time Stamp');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttoncard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttonset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.testLoop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loop Way\"), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.wayRecursion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Loop Way\"), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.wayReduce,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Reduce Way\"), React.createElement(Button, {\n      variant: \"warning\",\n      onClick: this.resetIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Reset\"))));\n  }\n\n}\n\n;\nexport default CalcButtons;","map":{"version":3,"sources":["/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/CalcButtons.js"],"names":["React","Button","CalcButtons","Component","constructor","props","testLoop","wayLoop","toCalc","index","console","log","fiboNew","fiboPrev","fiboFirst","sequence","setState","results","wayRecursion","wayReduce","resetIndex","result","stamp","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAGA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAInBC,QAJmB,GAIR,MAAM;AACd;AACA,WAAKC,OAAL,CAAa,KAAKF,KAAL,CAAWG,MAAxB;AACF,KAPkB;;AAAA,SASnBD,OATmB,GASRE,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACA,UAAIG,OAAJ;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,SAAS,GAAG,CAAhB;AAEA,UAAIL,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA3B,EAA8B,OAAQA,KAAR;;AAC9B,WAAK,IAAIM,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,IAAIN,KAAnC,EAA0CM,QAAQ,EAAlD,EAAsD;AAClDH,QAAAA,OAAO,GAAGE,SAAS,GAAGD,QAAtB;AACAC,QAAAA,SAAS,GAAGD,QAAZ;AACAA,QAAAA,QAAQ,GAAGD,OAAX;AACH;;AACD,WAAKI,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEL;AAAX,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,OAA7B,EAbkB,CAclB;AAEF,KAzBkB;AAElB;;AAyBDM,EAAAA,YAAY,CAACT,KAAD,EAAQ;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACA,QAAIA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA3B,EAA8B,OAAOA,KAAP,CAFb,CAGjB;AACF;;AAEDU,EAAAA,SAAS,CAACV,KAAD,EAAQ;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC;AACF;;AAEDW,EAAAA,UAAU,GAAG;AACVV,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAKK,QAAL,CAAcP,KAAd,CAAoB,EAApB;AACA,SAAKO,QAAL,CAAcK,MAAd,CAAqB,iBAArB;AACA,SAAKL,QAAL,CAAcM,KAAd,CAAoB,YAApB;AACF;;AAEDC,EAAAA,MAAM,GAAI;AACP,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKjB,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,EAGG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKY,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHH,EAIG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJH,EAKG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALH,CADH,CADH,CADH;AAaF;;AA3DsC;;AA4DzC;AAED,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'; \n\n\nclass CalcButtons extends React.Component {\n   constructor(props) {\n      super(props);\n   }\n\n   testLoop = () => {\n      //console.log(this.props.toCalc);\n      this.wayLoop(this.props.toCalc);\n   }\n\n   wayLoop = (index) => {\n      console.log(\"Loop Way Calculation\", index);\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n  \n      if (index <= 1 && index >= 0) return (index);\n      for (let sequence = 2; sequence <= index; sequence++) {\n          fiboNew = fiboFirst + fiboPrev;\n          fiboFirst = fiboPrev;\n          fiboPrev = fiboNew;\n      }\n      this.setState({ results: fiboNew});\n      console.log(\"Calculation: \", fiboNew);\n      //return this.result;\n      \n   }\n\n   wayRecursion(index) {\n      console.log(\"Recursion Way Calculation\", index);\n      if (index <= 1 && index >= 0) return index;\n      //this.setState.result(wayRecursion(index-1) + wayRecursion(index-2));\n   }\n\n   wayReduce(index) {\n      console.log(\"Reduce Way Calculation\", index);\n   }\n\n   resetIndex() {\n      console.log(\"Reset Index Input\");\n      this.setState.index('');\n      this.setState.result('Sequence Result');\n      this.setState.stamp('Time Stamp');\n   }\n \n   render () {\n      return (\n         <div>\n            <div className=\"buttoncard\">\n               <div className=\"buttonset\">\n                  {/*<Button variant=\"success\" onClick={this.wayLoop(this.props.toCalc)}>Loop Way</Button>*/}\n                  <Button variant=\"success\" onClick={this.testLoop}>Loop Way</Button>\n                  <Button variant=\"success\" onClick={this.wayRecursion}>Loop Way</Button>\n                  <Button variant=\"success\" onClick={this.wayReduce}>Reduce Way</Button>\n                  <Button variant=\"warning\" onClick={this.resetIndex}>Reset</Button>\n               </div>\n            </div>\n         </div>\n      );\n   }\n};\n\nexport default CalcButtons;"]},"metadata":{},"sourceType":"module"}