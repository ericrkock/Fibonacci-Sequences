{"ast":null,"code":"var _jsxFileName = \"/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/CalcButtons.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass CalcButtons extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickLoop = () => {\n      this.wayLoop(this.props.toCalc);\n    };\n\n    this.onClickRecursion = () => {\n      this.wayRecursion(this.props.toCalc);\n    };\n\n    this.onClickReduce = () => {\n      this.wayReduce(this.props.toCalc);\n    };\n\n    this.wayLoop = index => {\n      console.log(\"Loop Way Calculation\", index);\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n      if (index <= 1 && index >= 0) return index;\n\n      for (let sequence = 2; sequence <= index; sequence++) {\n        fiboNew = fiboFirst + fiboPrev;\n        fiboFirst = fiboPrev;\n        fiboPrev = fiboNew;\n      }\n\n      this.setState({\n        result: fiboNew\n      });\n      console.log(\"Calculation1: \", fiboNew);\n      console.log(\"Calculation2: \", this.props.result); //return this.result;\n    };\n\n    this.wayRecursion = index => {\n      console.log(\"Recursion Way Calculation\", index);\n      if (index <= 1 && index >= 0) return index; //this.setState({result: (wayRecursion(index-1) + wayRecursion(index-2))});\n    };\n\n    this.wayReduce = index => {\n      console.log(\"Reduce Way Calculation\", index);\n    };\n\n    this.resetIndex = () => {\n      console.log(\"Reset Index Input\");\n      this.setState({\n        index: '',\n        result: 'Sequence Result',\n        stamp: 'New Time Stamp'\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttoncard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttonset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.onClickLoop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Loop Way\"), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.onClickRecursion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Loop Way\"), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.onClickReduce,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Reduce Way\"), React.createElement(Button, {\n      variant: \"warning\",\n      onClick: this.resetIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Reset\"))));\n  }\n\n}\n\n;\nexport default CalcButtons;","map":{"version":3,"sources":["/Users/ERK/Web Development/ERK/Git/Repositories/Fibonacci-Sequences/fibonacci/src/components/CalcButtons.js"],"names":["React","Button","CalcButtons","Component","constructor","props","onClickLoop","wayLoop","toCalc","onClickRecursion","wayRecursion","onClickReduce","wayReduce","index","console","log","fiboNew","fiboPrev","fiboFirst","sequence","setState","result","resetIndex","stamp","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'; \n\n\nclass CalcButtons extends React.Component {\n   constructor(props) {\n      super(props);\n   }\n\n   onClickLoop = () => {this.wayLoop(this.props.toCalc)}\n   onClickRecursion = () => {this.wayRecursion(this.props.toCalc)}\n   onClickReduce = () => {this.wayReduce(this.props.toCalc)}\n\n   wayLoop = (index) => {\n      console.log(\"Loop Way Calculation\", index);\n      var fiboNew;\n      var fiboPrev = 1;\n      var fiboFirst = 0;\n  \n      if (index <= 1 && index >= 0) return (index);\n      for (let sequence = 2; sequence <= index; sequence++) {\n          fiboNew = fiboFirst + fiboPrev;\n          fiboFirst = fiboPrev;\n          fiboPrev = fiboNew;\n      }\n      this.setState({ result: fiboNew});\n      console.log(\"Calculation1: \", fiboNew);\n      console.log(\"Calculation2: \", this.props.result);\n      //return this.result;\n      \n   }\n\n   wayRecursion = (index) => {\n      console.log(\"Recursion Way Calculation\", index);\n      if (index <= 1 && index >= 0) return index;\n      //this.setState({result: (wayRecursion(index-1) + wayRecursion(index-2))});\n   }\n\n   wayReduce = (index) => {\n      console.log(\"Reduce Way Calculation\", index);\n   }\n\n   resetIndex = () => {\n      console.log(\"Reset Index Input\");\n      this.setState({\n         index: '',\n         result: 'Sequence Result',\n         stamp: 'New Time Stamp'\n      });\n   }\n \n   render () {\n      return (\n         <div>\n            <div className=\"buttoncard\">\n               <div className=\"buttonset\">\n                  <Button variant=\"success\" onClick={this.onClickLoop}>Loop Way</Button>\n                  <Button variant=\"success\" onClick={this.onClickRecursion}>Loop Way</Button>\n                  <Button variant=\"success\" onClick={this.onClickReduce}>Reduce Way</Button>\n                  <Button variant=\"warning\" onClick={this.resetIndex}>Reset</Button>\n               </div>\n            </div>\n         </div>\n      );\n   }\n};\n\nexport default CalcButtons;"]},"metadata":{},"sourceType":"module"}